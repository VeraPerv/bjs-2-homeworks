function compareArrays(arr1, arr2) {

  //let result = arr1.every((item, index) => arr1.length === arr2.length && item === arr2[index]);
  let result = arr1.length === arr2.length && arr1.every((item,index) => item === arr2[index]);
  return result;
}

compareArrays([8, 9, 5, 4], [8, 9, 5, 4, 8, 3, 5]);



function advancedFilter(arr) {

  let resultArr;
  resultArr = arr.filter(e => e > 0 && e % 3 === 0).map(item => item * 10);
  return resultArr;
}

advancedFilter([-1, -2]);

/*В первом задании, массивы не меняются. Следовательно и их длины не будут меняться, а следовательно, сравнение длин массивов нет смысла выполнять для каждого перебираемого элемента. Сравнение длин можно выполнить один раз за пределами колбека. То есть массивы будут одинаковыми, если длины массивов будут одинаковыми *И** каждый элемент будет совпадать с соответствующим элементом другого массива*: return arr1.length === arr2.length && arr1.every((item, index) => item === arr2[index]);
* Действия:

let переменная;
переменная = результат;
return переменная;

Можно сократить до:

return результат;

Эти пару замечаний желательно поправить, а в целом, всё реализовано корректно. Вы проделали отличную работу, удачи в дальнейшем обучении!

Это комментарий к коду ниже:


function compareArrays(arr1, arr2) {

  let result = arr1.every((item, index) => arr1.length === arr2.length && item === arr2[index]);
  return result;
}

compareArrays([8, 9, 5, 4], [8, 9, 5, 4, 8, 3, 5]);
*/


/*Задача 1. Сравнить массивы
Создайте функцию compareArrays(arr1, arr2), которая с помощью функции высшего порядка будет сравнивать значения двух массивов. Если массивы имеют одинаковые значения на одинаковых индексах, compareArrays должна выдавать true (иначе false). Используйте метод every для сравнения элементов одного массива с соответствующими элементами другого массива.

Пример вызова:

compareArrays([8, 9], [6]) // false, разные значения
compareArrays([8, 9, 5, 4], [8, 9, 5, 4, 8, 3, 5]) // false, разные значения
compareArrays([9, 2, 4, 8, 2], [9, 2, 4]) // false, разные значения
compareArrays([1, 2, 3], [2, 3, 1]) // false, разные индексы, хотя и одинаковые значения
compareArrays([8, 1, 2], [8, 1, 2]) // true */


/* Фильтрация и преобразование массива
Создайте функцию advancedFilter(arr), которая отбирает из массива чисел только положительные числа, кратные 3 и возвращает новый массив с отобранными числами, умноженными на 10. Для этого к исходному массиву примените метод filter. Можно 2 раза: сначала отберите только положительные числа, затем только кратные 3. Потом используйте метод map, чтобы умножить полученные значения на 10. В задаче следует пользоваться методами массива, а не циклом for.

let result = arr.filter(...).filter(...).map(...)
Пример вызова:

advancedFilter([-1,6,-9,3]); // [60,30]
advancedFilter([-10,-21,12,123]); // [120, 1230]
advancedFilter([-1,-2]); // []*/